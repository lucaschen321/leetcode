{"data": {"question": {"questionId": "152", "title": "Maximum Product Subarray", "titleSlug": "maximum-product-subarray", "content": "<p>Given an integer array <code>nums</code>, find a <span data-keyword=\"subarray-nonempty\">subarray</span> that has the largest product, and return <em>the product</em>.</p>\n\n<p>The test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,-2,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [2,3] has the largest product 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-2,0,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The result cannot be 2, because [-2,-1] is not a subarray.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n\t<li>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n", "difficulty": "Medium", "isPaidOnly": false, "hints": [], "likes": 15938, "dislikes": 481, "companyTagStats": null, "codeSnippets": [{"lang": "C++", "langSlug": "cpp", "code": "class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        \n    }\n};"}, {"lang": "Java", "langSlug": "java", "code": "class Solution {\n    public int maxProduct(int[] nums) {\n        \n    }\n}"}, {"lang": "Python", "langSlug": "python", "code": "class Solution(object):\n    def maxProduct(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "}, {"lang": "Python3", "langSlug": "python3", "code": "class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        "}, {"lang": "C", "langSlug": "c", "code": "int maxProduct(int* nums, int numsSize){\n\n}"}, {"lang": "C#", "langSlug": "csharp", "code": "public class Solution {\n    public int MaxProduct(int[] nums) {\n        \n    }\n}"}, {"lang": "JavaScript", "langSlug": "javascript", "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxProduct = function(nums) {\n    \n};"}, {"lang": "Ruby", "langSlug": "ruby", "code": "# @param {Integer[]} nums\n# @return {Integer}\ndef max_product(nums)\n    \nend"}, {"lang": "Swift", "langSlug": "swift", "code": "class Solution {\n    func maxProduct(_ nums: [Int]) -> Int {\n        \n    }\n}"}, {"lang": "Go", "langSlug": "golang", "code": "func maxProduct(nums []int) int {\n    \n}"}, {"lang": "Scala", "langSlug": "scala", "code": "object Solution {\n    def maxProduct(nums: Array[Int]): Int = {\n        \n    }\n}"}, {"lang": "Kotlin", "langSlug": "kotlin", "code": "class Solution {\n    fun maxProduct(nums: IntArray): Int {\n        \n    }\n}"}, {"lang": "Rust", "langSlug": "rust", "code": "impl Solution {\n    pub fn max_product(nums: Vec<i32>) -> i32 {\n        \n    }\n}"}, {"lang": "PHP", "langSlug": "php", "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxProduct($nums) {\n        \n    }\n}"}, {"lang": "TypeScript", "langSlug": "typescript", "code": "function maxProduct(nums: number[]): number {\n\n};"}, {"lang": "Racket", "langSlug": "racket", "code": "(define/contract (max-product nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"}, {"lang": "Erlang", "langSlug": "erlang", "code": "-spec max_product(Nums :: [integer()]) -> integer().\nmax_product(Nums) ->\n  ."}, {"lang": "Elixir", "langSlug": "elixir", "code": "defmodule Solution do\n  @spec max_product(nums :: [integer]) :: integer\n  def max_product(nums) do\n\n  end\nend"}, {"lang": "Dart", "langSlug": "dart", "code": "class Solution {\n  int maxProduct(List<int> nums) {\n\n  }\n}"}], "metaData": "{\r\n  \"name\": \"maxProduct\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"nums\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}", "topicTags": [{"name": "Array", "slug": "array"}, {"name": "Dynamic Programming", "slug": "dynamic-programming"}], "similarQuestionList": [{"difficulty": "Medium", "titleSlug": "maximum-subarray", "title": "Maximum Subarray", "translatedTitle": null, "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "house-robber", "title": "House Robber", "translatedTitle": null, "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "product-of-array-except-self", "title": "Product of Array Except Self", "translatedTitle": null, "isPaidOnly": false}, {"difficulty": "Easy", "titleSlug": "maximum-product-of-three-numbers", "title": "Maximum Product of Three Numbers", "translatedTitle": null, "isPaidOnly": false}, {"difficulty": "Medium", "titleSlug": "subarray-product-less-than-k", "title": "Subarray Product Less Than K", "translatedTitle": null, "isPaidOnly": false}], "mysqlSchemas": [], "stats": "{\"totalAccepted\": \"1M\", \"totalSubmission\": \"2.9M\", \"totalAcceptedRaw\": 1000790, \"totalSubmissionRaw\": 2870658, \"acRate\": \"34.9%\"}", "solution": {"id": "977", "title": "Maximum Product Subarray", "content": null, "contentTypeId": "107", "paidOnly": true, "hasVideoSolution": false, "paidOnlyVideo": true, "canSeeDetail": false, "rating": {"count": 225, "average": "4.813", "userRating": null}, "topic": {"id": 738529, "commentCount": 215, "topLevelCommentCount": 125, "favoriteCount": 0, "viewCount": 282085, "subscribed": false, "solutionTags": [], "post": {"id": 1360294, "status": null, "creationDate": 1594871175, "author": {"username": "LeetCode", "isActive": true, "profile": {"userAvatar": "https://assets.leetcode.com/users/leetcode/avatar_1568224780.png", "reputation": 27343}}}}}}}}